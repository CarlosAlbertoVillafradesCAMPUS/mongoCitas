use("db_citas_campus");
db.createCollection("counters");
db.counters.insertMany([
    {ID:`citasID`, sequenceValue: 0}
]);

use("db_citas_campus");
db.createCollection("usuario", {
    validator:{
        $jsonSchema:{
            bsonType: "object",
            additionalProperties: false,
            required: ["usu_id", "usu_nombre", "usu_primer_apellido_usuar", "usu_telefono", "usu_direccion", "usu_email", "usu_tipodoc", "usu_genero"],
            properties:{
                _id:{
                    bsonType: 'objectId',
                },
                usu_id:{
                    bsonType: "int",
                    description: "El campo 'usu_id' debe ser un int no mayor a [12 caracteres]"
                },
                usu_nombre:{
                    bsonType: "string",
                    maxLength: 20,
                    pattern: "^[A-Za-z\\s]+$",
                    description: "El campo 'usu_nombre' debe ser un string, no contener numeros y no sobrepasar [20 caracteres]",
                },
                usu_segdo_nombre:{
                    bsonType: "string",
                    maxLength: 20,
                    pattern: "^[A-Za-z\\s]+$",
                    description: "El campo 'usu_segdo_nombre' debe ser un string, no contener numeros y no sobrepasar [20 caracteres]",
                },
                usu_primer_apellido_usuar:{
                    bsonType: "string",
                    maxLength: 20,
                    pattern: "^[A-Za-z\\s]+$",
                    description: "El campo 'usu_primer_apellido_usuar' debe ser un string, no contener numeros y no sobrepasar [20 caracteres]",
                },
                usu_segdo_apellido_usuar:{
                    bsonType: "string",
                    maxLength: 20,
                    pattern: "^[A-Za-z\\s]+$",
                    description: "El campo 'usu_segdo_apellido_usuar' debe ser un string, no contener numeros y no sobrepasar [20 caracteres]",
                },
                usu_telefono:{
                    bsonType: "string",
                    maxLength: 10,
                    pattern: "^[0-9]+$",
                    description: "El campo 'usu_segdo_apellido_usuar' debe ser un string numerico y no sobrepasar [10 caracteres]",
                },
                usu_direccion:{
                    bsonType: "string",
                    maxLength: 70,
                    description: "El campo 'usu_direccion' debe ser un string y no sobrepasar [70 caracteres]",
                },
                usu_email:{
                    bsonType: "string",
                    maxLength: 60,
                    pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]+$",
                    description: "El campo 'usu_direccion' debe ser un string y no sobrepasar [60 caracteres]",
                },
                usu_tipodoc:{
                    bsonType: "string",
                    enum:["CC", "TI", "PP"],
                    description: "El campo 'usu_tipodoc', debe ser un string. valores permitidos[CC,TI,PP]"
                },
                usu_genero:{
                    bsonType: "string",
                    enum:["M", "F", "NI"],
                    description: "El campo 'usu_genero', debe ser un string. valores permitidos[M,F,NI]"
                },
                usu_acudiente:{
                    bsonType: "object",
                    additionalProperties: false,
                    required:["acu_id", "acu_nombreCompleto", "acu_telefono"],
                    properties:{
                        acu_id:{
                            bsonType: "int",
                            description: "El campo 'usu_id' debe ser un int no mayor a [12 caracteres]"
                        },
                        acu_nombreCompleto:{
                            bsonType: "string",
                            maxLength: 60,
                            pattern: "^[A-Za-z\\s]+$",
                            description: "El campo 'usu_nombre' debe ser un string, no contener numeros y no sobrepasar [60 caracteres]"
                        },
                        acu_telefono:{
                            bsonType: "string",
                            maxLength: 10,
                            pattern: "^[0-9]+$",
                            description: "El campo 'usu_segdo_apellido_usuar' debe ser un string numerico y no sobrepasar [10 caracteres]"
                        },
                        acu_direccion:{
                            bsonType: "string",
                            maxLength: 70,
                            description: "El campo 'usu_direccion' debe ser un string y no sobrepasar [70 caracteres]",
                        }
                    }
                }
            }
        }
    }
})

use("db_citas_campus");
db.createCollection("cita", {
    validator:{
        $jsonSchema:{
            bsonType: "object",
            additionalProperties: false,
            required: ["cit_fecha", "cit_estadoCita", "cit_medico", "cit_datosUsuario"],
            properties:{
                _id:{
                    bsonType: 'objectId',
                },
                ID: {
                    bsonType: "int",
                    description: "ID debe ser un int",
                },
                cit_fecha:{
                    bsonType: "date",
                    description: "El campo 'cit_fecha' tipo date"
                },
                cit_estadoCita:{
                    bsonType: "string",
                    enum:["Cancelada", "Reagendada", "Activa", "Pendiente"],
                    description: "El campo 'usu_tipodoc', debe ser un string. valores permitidos[Cancelada,Reagendada,Activa,Pendiente]"
                },
                cit_medico:{
                    bsonType: "int",
                    description: "El campo 'cit_medico' debe ser un int",
                },
                cit_datosUsuario:{
                    bsonType: "int",
                    description: "El campo 'cit_datosUsuario' debe ser un int",
                },
            }
        }
    }
})

use("db_citas_campus");
db.createCollection("medico", {
    validator:{
        $jsonSchema:{
            bsonType: "object",
            additionalProperties: false,
            required: ["med_nroMatriculaProfesional", "med_nombreCompleto", "med_consultorio", "role", "med_especialidad", "password"],
            properties:{
                _id:{
                    bsonType: 'objectId',
                },
                med_nroMatriculaProfesional:{
                    bsonType: "int",
                    description: "El campo 'med_nroMatriculaProfesional' debe ser un int no mayor a [12 caracteres]"
                },
                med_nombreCompleto:{
                    bsonType: "string",
                    maxLength: 60,
                    pattern: "^[A-Za-z\\s]+$",
                    description: "El campo 'med_nombreCompleto' debe ser un string, no contener numeros y no sobrepasar [60 caracteres]"
                },
                med_consultorio:{
                    bsonType: "object",
                    additionalProperties: false,
                    required:["cons_codigo"],
                    properties:{
                        cons_codigo:{
                            bsonType: "int",
                            description: "El campo 'cons_codigo' debe ser un int."
                        },
                        cons_nombre:{
                            bsonType: "string",
                            description: "El campo 'cons_nombre' debe ser un string."
                        }
                    },
                },
                role:{
                    bsonType: "object",
                    additionalProperties: false,
                    required:["nombre", "permisos", "versiones"],
                    properties:{
                        nombre:{
                            bsonType:"string",
                            enum:["admin", "empleado"],
                            description: "El campo 'nombre' del objeto 'roles' es obligatorio"
                        },
                        permisos:{
                            bsonType: "array",
                            items:{
                                bsonType:"string",
                                enum:["*","get_usuarios", "get_medicos", "get_citas", "post_usuarios", "post_medicos", "post_citas"],
                                description: "El campo 'permisos' del objeto 'roles' es obligatorio"
                            }
                        },
                        versiones:{
                            bsonType: "array",
                            items:{
                                bsonType:"string",
                                description: "El campo 'versiones' del objeto 'roles' es obligatorio"
                            }
                        }
                    }
                },
                med_especialidad:{
                    bsonType: "string",
                    maxLength: 40,
                    pattern: "^[A-Za-z\\s]+$",
                    description: "El campo 'med_especialidad' debe ser un string, no contener numeros y no sobrepasar [40 caracteres]",
                },
                password:{
                    bsonType: "string",
                    maxLength: 20,
                    description: "El campo 'password' debe ser un string, no sobrepasar [20 caracteres]",
                
                }
               
            }
        }
    }
})

// use("db_citas_campus");
// db.medico.insertMany([{
//     med_nroMatriculaProfesional: 2222,
//     med_nombreCompleto: "Maria Perez",
//     med_consultorio: {
//       cons_codigo: 369,
//     },
//     role: {
//       nombre: "empleado",
//       permisos: ["get_citas", "post_citas"],
//       versiones: ["1.0.0"],
//     },
//     med_especialidad: "Pediatra",
//     password: "maria",
//   },

//   {
//     med_nroMatriculaProfesional: 3333,
//     med_nombreCompleto: "Jose Garcia",
//     med_consultorio: {
//       cons_codigo: 456,
//     },
//     role: {
//       nombre: "admin",
//       permisos: ["*"],
//       versiones: ["1.0.0"],
//     },
//     med_especialidad: "Cirujano",
//     password: "jose",
//   },

//   {
//     med_nroMatriculaProfesional: 4444,
//     med_nombreCompleto: "Luis Rodriguez",
//     med_consultorio: {
//       cons_codigo: 543,
//     },
//     role: {
//       nombre: "empleado",
//       permisos: ["get_usuarios", "post_usuarios"],
//       versiones: ["1.0.0"],
//     },
//     med_especialidad: "Ginebra",
//     password: "luis",
//   },

//   {
//     med_nroMatriculaProfesional: 5548,
//     med_nombreCompleto: "felipe Garcia",
//     med_consultorio: {
//       cons_codigo: 459,
//     },
//     role: {
//       nombre: "empleado",
//       permisos: ["get_usuarios", "post_usuarios"],
//       versiones: ["1.0.0"],
//     },
//     med_especialidad: "Cirujano",
//     password: "felipe",
//   },
//   {
//     med_nroMatriculaProfesional: 6666,
//     med_nombreCompleto: "Pedro Gonzalez",
//     med_consultorio: {
//       cons_codigo: 721,
//     },
//     role: {
//       nombre: "empleado",
//       permisos: ["get_usuarios", "get_medicos"],
//       versiones: ["1.0.0"],
//     },
//     med_especialidad: "pediatra",
//     password: "pedro",
//   },])

/* use("db_citas_campus");
db.medico.findOne({med_nroMatriculaProfesional:1111, password: "villa"}) */


